version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.9
      - image: circleci/postgres:10.6-ram
    environment:
      - PYTHONPATH: src:test
      - POSTGRES_USER: postgres
      - POSTGRES_HOST: postgres
      - POSTGRES_PORT: 5432
      - POSTGRES_NAME: geolocation_test
      - POSTGRES_PASSWORD: password
      - POSTGRES_HOST_AUTH_METHOD: trust
      - DEBUG_MODE: 'True'
      - FLASK_ENV: dev
      - DATABASE_URL_TEST: postgresql://postgres:postgres@localhost:5432/geolocation_test
    steps:
      - checkout
      - restore_cache:
          keys:
            - venv-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: venv-{{ checksum "requirements.txt" }}
          paths:
            - 'venv'
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python -m unittest discover
